@mixin flex-centered($align:center, $justify:center) { 
  display:flex;
  align-items: $align;
  justify-content: $justify;
}

@mixin font($size, $height, $weight, $spacing) {
  font-size: $size;
  line-height: $height;
  font-weight: $weight;
  letter-spacing: $spacing;
}

@mixin mobile {
  @media screen and (min-width: 480px) {
    @content;
  }
}

@mixin tablet {
  @media screen and (min-width: 768px) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: 1200px) {
    @content;
  }
}

@mixin retina {
  @media (min-device-pixel-ratio: 2),
    (min-resolution: 192dpi),
    (min-resolution: 2dppx) {
    @content;
  }
}

@mixin media($size) {
  @media screen and (min-width: $size) {
    @content;
  }
}

@mixin width-calc($count, $gap) {
  width: calc((100% - $gap * ($count - 1)) / $count);
}


/// Mixin to manage responsive breakpoints
/// @author Kitty Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}